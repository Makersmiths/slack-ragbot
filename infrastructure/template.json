{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vault_secrets_name": {
            "defaultValue": "[concat('rag-vault-', uniqueString(resourceGroup().id))]",
            "type": "String"
        },
        "confluence_space_key": {
            "defaultValue": "",
            "type": "String"
        },
        "confluence_token": {
            "defaultValue": "",
            "type": "String"
        },
        "confluence_url": {
            "defaultValue": "",
            "type": "String"
        },
        "slack_bot_token": {
            "defaultValue": "",
            "type": "String"
        },
        "slack_app_token": {
            "defaultValue": "",
            "type": "String"
        },
        "slack_client": {
            "defaultValue": "",
            "type": "String"
        },
        "virtualMachines_rag_compute_name": {
            "defaultValue": "rag-compute",
            "type": "String"
        },
        "virtualNetworks_rag_network_name": {
            "defaultValue": "rag_network",
            "type": "String"
        },
        "networkSecurityGroups_Cosmos_nsg_name": {
            "defaultValue": "Cosmos_nsg",
            "type": "String"
        },
        "sshPublicKeys_rag_compute_key_name": {
            "defaultValue": "rag-compute_key",
            "type": "String"
        },
        "publicIPAddresses_rag_compute_ip_name": {
            "defaultValue": "rag-compute-ip",
            "type": "String"
        },
        "networkInterfaces_rag_compute_name": {
            "defaultValue": "rag-compute",
            "type": "String"
        },
        "databaseAccounts_cosmos_name": {
            "defaultValue": "[concat('cosmos-', uniqueString(resourceGroup().id))]",
            "type": "String"
        },
        "networkSecurityGroups_compute_access_group_name": {
            "defaultValue": "compute_access_group",
            "type": "String"
        },
        "accounts_aiServicesOpenAI_name": {
            "defaultValue": "[concat('aiServicesOpenAI-', uniqueString(resourceGroup().id))]",
            "type": "String"
        },
        "pubSshKey": {
            "type": "secureString"
        },
        "ai_services_dns_name": {
            "type": "string",
            "defaultValue": "[concat('test-rag', uniqueString(resourceGroup().id))]"        
        },
        "publicIpAddress": {
            "type": "string",
            "defaultValue": ""
        },
        "managementIp": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Compute/sshPublicKeys",
            "apiVersion": "2024-07-01",
            "name": "[parameters('sshPublicKeys_rag_compute_key_name')]",
            "location": "eastus",
            "properties": {
                "publicKey": "[parameters('pubSshKey')]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-03-01",
            "name": "[parameters('networkSecurityGroups_compute_access_group_name')]",
            "location": "eastus",
            "properties": {
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-03-01",
            "name": "[parameters('networkSecurityGroups_Cosmos_nsg_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-03-01",
            "name": "[parameters('publicIPAddresses_rag_compute_ip_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "zones": [
                "1"
            ],
            "properties": {
                "ipAddress": "[parameters('publicIpAddress')]",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2024-10-01",
            "name": "[parameters('accounts_aiServicesOpenAI_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_rag_network_name'), 'compute')]"
            ],
            "sku": {
                "name": "S0"
            },
            "kind": "OpenAI",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "apiProperties": {},
                "customSubDomainName": "[parameters('ai_services_dns_name')]",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Deny",
                    "virtualNetworkRules": [
                        {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_rag_network_name'), 'compute')]",
                            "ignoreMissingVnetServiceEndpoint": false
                        }
                    ],
                    "ipRules": []
                },
                "publicNetworkAccess": "Enabled",
                "disableLocalAuth": false
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts/defenderForAISettings",
            "apiVersion": "2024-10-01",
            "name": "[concat(parameters('accounts_aiServicesOpenAI_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_aiServicesOpenAI_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts/deployments",
            "apiVersion": "2024-10-01",
            "name": "[concat(parameters('accounts_aiServicesOpenAI_name'), '/gpt-4-deployment')]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_aiServicesOpenAI_name'))]"
            ],
            "sku": {
                "name": "standard",
                "capacity": 4
            },
            "properties": {
                "model": {
                    "format": "OpenAI",
                    "name": "gpt-4o-mini",
                    "version": "2024-07-18"
                },
                "versionUpgradeOption": "OnceNewDefaultVersionAvailable",
                "currentCapacity": 4
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts/deployments",
            "apiVersion": "2024-10-01",
            "name": "[concat(parameters('accounts_aiServicesOpenAI_name'), '/text-embedding-3-large')]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('accounts_aiServicesOpenAI_name'))]"
            ],
            "sku": {
                "name": "Standard",
                "capacity": 60
            },
            "properties": {
                "model": {
                    "format": "OpenAI",
                    "name": "text-embedding-3-large",
                    "version": "1"
                },
                "versionUpgradeOption": "OnceNewDefaultVersionAvailable",
                "currentCapacity": 60            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-07-01",
            "name": "[parameters('virtualMachines_rag_compute_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_rag_compute_name'))]"
            ],
            "zones": [
                "1"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B1s"
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "canonical",
                        "offer": "ubuntu-24_04-lts",
                        "sku": "server",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_rag_compute_name'), '_OsDisk_1_aadae950dd6548fbac8163801df891ec')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "deleteOption": "Delete"
                    },
                    "dataDisks": [],
                    "diskControllerType": "SCSI"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_rag_compute_name')]",
                    "adminUsername": "mak-rag-user",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "/home/mak-rag-user/.ssh/authorized_keys",
                                    "keyData": "[parameters('pubSshKey')]"
                                }
                            ]
                        },
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "securityProfile": {
                    "uefiSettings": {
                        "secureBootEnabled": true,
                        "vTpmEnabled": true
                    },
                    "securityType": "TrustedLaunch"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_rag_compute_name'))]",
                            "properties": {
                                "deleteOption": "Delete"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(parameters('virtualMachines_rag_compute_name'), '25fbc0a9-bd7c-42a3-aa1a-3b75d497ee68', resourceGroup().id)]",
            "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '25fbc0a9-bd7c-42a3-aa1a-3b75d497ee68')]",
                "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_rag_compute_name')), '2021-07-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(parameters('virtualMachines_rag_compute_name'), 'acdd72a7-3385-48ef-bd42-f606fba81ae7', resourceGroup().id)]",
            "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_rag_compute_name')), '2021-07-01', 'Full').identity.principalId]"
            }
        },
                {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(parameters('virtualMachines_rag_compute_name'), 'fbdf93bf-df7d-467e-a4d2-9458aa1360c8', resourceGroup().id)]",
            "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'fbdf93bf-df7d-467e-a4d2-9458aa1360c8')]",
                "principalId": "[reference(resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_rag_compute_name')), '2021-07-01', 'Full').identity.principalId]"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2024-09-01-preview",
            "name": "[parameters('databaseAccounts_cosmos_name')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_rag_network_name'), 'compute')]"
            ],
            "kind": "GlobalDocumentDB",
            "identity": {
                "type": "None"
            },
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": true,
                "virtualNetworkRules": [
                    {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_rag_network_name'), 'compute')]",
                        "ignoreMissingVNetServiceEndpoint": false
                    }
                ],
                "disableKeyBasedMetadataWriteAccess": false,
                "enableFreeTier": false,
                "enableAnalyticalStorage": false,
                "analyticalStorageConfiguration": {
                    "schemaType": "WellDefined"
                },
                "databaseAccountOfferType": "Standard",
                "enableMaterializedViews": false,
                "capacityMode": "Provisioned",
                "defaultIdentity": "FirstPartyIdentity",
                "networkAclBypass": "None",
                "disableLocalAuth": false,
                "enablePartitionMerge": false,
                "enablePerRegionPerPartitionAutoscale": true,
                "enableBurstCapacity": false,
                "enablePriorityBasedExecution": false,
                "minimalTlsVersion": "Tls12",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "East US",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "cors": [],
                "capabilities": [
                    {
                        "name": "EnableNoSQLVectorSearch"
                    },
                    {
                        "name": "DeleteAllItemsByPartitionKey"
                    }
                ],
                "ipRules": [
                    {
                        "ipAddressOrRange": "4.210.172.107"
                    },
                    {
                        "ipAddressOrRange": "13.88.56.148"
                    },
                    {
                        "ipAddressOrRange": "13.91.105.215"
                    },
                    {
                        "ipAddressOrRange": "40.91.218.243"
                    }
                ],
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": 240,
                        "backupRetentionIntervalInHours": 8,
                        "backupStorageRedundancy": "Geo"
                    }
                },
                "networkAclBypassResourceIds": [],
                "diagnosticLogSettings": {
                    "enableFullTextQuery": "None"
                },
                "capacity": {
                    "totalThroughputLimit": 1000
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2024-09-01-preview",
            "name": "[concat(parameters('databaseAccounts_cosmos_name'), '/vectorDB')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "vectorDB"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
            "apiVersion": "2024-09-01-preview",
            "name": "[concat(parameters('databaseAccounts_cosmos_name'), '/00000000-0000-0000-0000-000000000001')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_name'))]"
            ],
            "properties": {
                "roleName": "Cosmos DB Built-in Data Reader",
                "type": "BuiltInRole",
                "assignableScopes": [
                    "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_name'))]"
                ],
                "permissions": [
                    {
                        "dataActions": [
                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/executeQuery",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/readChangeFeed",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/read"
                        ],
                        "notDataActions": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
            "apiVersion": "2024-09-01-preview",
            "name": "[concat(parameters('databaseAccounts_cosmos_name'), '/00000000-0000-0000-0000-000000000002')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_name'))]"
            ],
            "properties": {
                "roleName": "Cosmos DB Built-in Data Contributor",
                "type": "BuiltInRole",
                "assignableScopes": [
                    "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_name'))]"
                ],
                "permissions": [
                    {
                        "dataActions": [
                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*"
                        ],
                        "notDataActions": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2024-04-01-preview",
            "name": "[parameters('vault_secrets_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_rag_network_name'), 'compute')]"
            ],
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "26393246-7297-41fe-9749-627cccf75e34",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Deny",
                    "ipRules": [],
                    "virtualNetworkRules": [
                        {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_rag_network_name'), 'compute')]",
                            "ignoreMissingVnetServiceEndpoint": false
                        }
                    ]
                },
                "accessPolicies": [
                    {
                        "tenantId": "26393246-7297-41fe-9749-627cccf75e34",
                        "objectId": "cb9acb9f-9a2e-489b-8147-08ac8b43dfe4",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "GetRotationPolicy",
                                "SetRotationPolicy",
                                "Rotate"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    },
                    {
                        "tenantId": "26393246-7297-41fe-9749-627cccf75e34",
                        "objectId": "faef1802-0f96-44d1-b851-c32b312e0200",
                        "permissions": {
                            "keys": [],
                            "secrets": [
                                "Get",
                                "List"
                            ],
                            "certificates": []
                        }
                    }
                ],
                "enabledForDeployment": true,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": true,
                "vaultUri": "[concat('https://', parameters('vault_secrets_name'), '.vault.azure.net/')]",
                "provisioningState": "Succeeded",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vault_secrets_name'), '/slack-app-token')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vault_secrets_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                },
                "contentType": "string",
                "value": "[parameters('slack_app_token')]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vault_secrets_name'), '/slack-bot-token')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vault_secrets_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                },
                "contentType": "string",
                "value": "[parameters('slack_bot_token')]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vault_secrets_name'), '/slack-client')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vault_secrets_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                },
                "contentType": "string",
                "value": "[parameters('slack_client')]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vault_secrets_name'), '/confluence-token')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vault_secrets_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                },
                "contentType": "string",
                "value": "[parameters('confluence_token')]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vault_secrets_name'), '/confluence-url')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vault_secrets_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                },
                "contentType": "string",
                "value": "[parameters('confluence_url')]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vault_secrets_name'), '/confluence-space-key')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vault_secrets_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                },
                "contentType": "string",
                "value": "[parameters('confluence_space_key')]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('networkSecurityGroups_compute_access_group_name'), '/AllowCidrBlockSSHInbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_compute_access_group_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "[parameters('managementIp')]",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 110,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2024-09-01-preview",
            "name": "[concat(parameters('databaseAccounts_cosmos_name'), '/vectorDB/vectorContainer')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_cosmos_name'), 'vectorDB')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "vectorContainer",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/_etag/?"
                            },
                            {
                                "path": "/embedding/*"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/myPartitionKey"
                        ],
                        "kind": "Hash"
                    },
                    "uniqueKeyPolicy": {
                        "uniqueKeys": []
                    },
                    "conflictResolutionPolicy": {
                        "mode": "LastWriterWins",
                        "conflictResolutionPath": "/_ts"
                    },
                    "computedProperties": []
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings",
            "apiVersion": "2024-09-01-preview",
            "name": "[concat(parameters('databaseAccounts_cosmos_name'), '/vectorDB/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_cosmos_name'), 'vectorDB')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_name'))]"
            ],
            "properties": {
                "resource": {
                    "throughput": 400
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-03-01",
            "name": "[parameters('virtualNetworks_rag_network_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Cosmos_nsg_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_compute_access_group_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/24"
                    ]
                },
                "encryption": {
                    "enabled": true,
                    "enforcement": "AllowUnencrypted"
                },
                "privateEndpointVNetPolicies": "Disabled",
                "subnets": [
                    {
                        "name": "default",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_rag_network_name'), 'default')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.0.16/28"
                            ],
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Cosmos_nsg_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "NetworkSecurityGroupEnabled",
                            "privateLinkServiceNetworkPolicies": "Enabled",
                            "defaultOutboundAccess": false
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "compute",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_rag_network_name'), 'compute')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.0.0/28"
                            ],
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_compute_access_group_name'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.AzureCosmosDB",
                                    "locations": [
                                        "*"
                                    ]
                                },
                                {
                                    "service": "Microsoft.KeyVault",
                                    "locations": [
                                        "*"
                                    ]
                                },
                                {
                                    "service": "Microsoft.CognitiveServices",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('virtualNetworks_rag_network_name'), '/compute')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_rag_network_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_compute_access_group_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.0.0/28"
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_compute_access_group_name'))]"
                },
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.AzureCosmosDB",
                        "locations": [
                            "*"
                        ]
                    },
                    {
                        "service": "Microsoft.KeyVault",
                        "locations": [
                            "*"
                        ]
                    },
                    {
                        "service": "Microsoft.CognitiveServices",
                        "locations": [
                            "*"
                        ]
                    }
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('virtualNetworks_rag_network_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_rag_network_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Cosmos_nsg_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.0.16/28"
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Cosmos_nsg_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "NetworkSecurityGroupEnabled",
                "privateLinkServiceNetworkPolicies": "Enabled",
                "defaultOutboundAccess": false
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings",
            "apiVersion": "2024-09-01-preview",
            "name": "[concat(parameters('databaseAccounts_cosmos_name'), '/vectorDB/vectorContainer/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers', parameters('databaseAccounts_cosmos_name'), 'vectorDB', 'vectorContainer')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_cosmos_name'), 'vectorDB')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_cosmos_name'))]"
            ],
            "properties": {
                "resource": {
                    "throughput": 400
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2024-03-01",
            "name": "[parameters('networkInterfaces_rag_compute_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_rag_compute_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_rag_network_name'), 'compute')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_compute_access_group_name'))]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_rag_compute_name')), '/ipConfigurations/ipconfig1')]",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "privateIPAddress": "10.0.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_rag_compute_ip_name'))]",
                                "properties": {
                                    "deleteOption": "Delete"
                                }
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_rag_network_name'), 'compute')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_compute_access_group_name'))]"
                },
                "nicType": "Standard",
                "auxiliaryMode": "None",
                "auxiliarySku": "None"
            }
        }
    ]
}